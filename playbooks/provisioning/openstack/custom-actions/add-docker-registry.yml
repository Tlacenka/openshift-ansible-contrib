---
- hosts: cluster_hosts
  vars:
    registries: []
    insecure_registries: []

  tasks:
  - name: Install atomic-registries package
    yum:
      name: atomic-registries
      state: latest
    become: true

  - name: Get registry configuration file
    stat:
      path: /etc/containers/registries.conf
    register: file_result

  - name: Check if it exists
    assert:
      that: 'file_result.stat.exists'
      msg: "Configuration file does not exist."

  - name: Load configuration file
    shell: cat /etc/containers/registries.conf
    register: file_content
    become: true

  - name: Store file content into a variable
    set_fact:
      docker_conf: "{{ file_content.stdout | from_yaml }}"

  - name: Make sure that docker file content is a dictionary
    set_fact:
      docker_conf: {}
    when: '(docker_conf is string) and (not docker_conf)'

  - name: Make sure that registries is a list
    when: 'registries is string'
    set_fact:
       registries_list: [ "{{ registries }}" ]

  - name: Make sure that insecure_registries is a list
    when: 'insecure_registries is string'
    set_fact:
      insecure_registries_list: [ "{{ insecure_registries }}" ]

  - name: Set docker file content to a unified format
    set_fact:
      docker_conf_registries: "{{ [] if docker_conf['registries'] is not defined else [ docker_conf['registries'] ] if docker_conf['registries'] is string else docker_conf['registries'] }}"
      docker_conf_insecure_registries: "{{ [] if docker_conf['insecure_registries'] is not defined else  [ docker_conf['insecure_registries'] ] if docker_conf['insecure_registries'] is string else docker_conf['insecure_registries'] }}"

  - name: Add other registries
    set_fact:
      docker_conf: "{{ docker_conf | combine({'registries': [docker_conf_registries + registries]}, recursive=True) }}"
    when: 'registries_list is not defined'
    register: registries_merge_result

  - name: Add other registries (if registries had to be converted)
    set_fact:
      docker_conf: "{{ docker_conf | combine({'registries': [docker_conf_registries + registries_list]}, recursive=True) }}"
    when: 'registries_merge_result|skipped'

  - name: Add insecure registries
    set_fact:
      docker_conf: "{{ docker_conf | combine({'insecure_registries': [docker_conf_insecure_registries + insecure_registries ]}, recursive=True) }}"
    when: 'insecure_registries_list is not defined'
    register: insecure_registries_merge_result

  - name: Add insecure registries (if insecure_registries had to be converted)
    set_fact:
      docker_conf: "{{ docker_conf | combine({'insecure_registries': [docker_conf_insecure_registries + insecure_registries_list ]}, recursive=True) }}"
    when: 'insecure_registries_merge_result|skipped'

  - name: Load variable back to file
    copy:
      content: "{{ docker_conf | to_yaml }}"
      dest: /etc/containers/registries.conf
    become: true

  - name: Restart docker
    service:
      name: docker
      state: restarted
    ignore_errors: true
